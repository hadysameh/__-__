import { Vacation } from "../../models";
import { IOfficerModel, IVacationTypeModel, userTypesEnum } from "../../types";

class GetPendingVacationsRepo {
  static async getPendingVacations(
    userType: string,
    pageNumber: any,
    rowsPerPage: any
  ) {
    pageNumber = pageNumber - 1;

    let findParams: any = {};
    console.log({userType})
    if (userType == userTypesEnum.manager) {
      findParams = {
        ManagerApproved: null,

        viceManagerApproved: true,

        OfficersAffairsApproved: true,

        branchChiefApproved: true,
      };
    } else if (userType == userTypesEnum.viceManager) {
      findParams = {
        ManagerApproved: null,

        viceManagerApproved: null,

        OfficersAffairsApproved: true,

        branchChiefApproved: true,
      };
    } else if (userType == userTypesEnum.officersAffairs) {
      findParams = {
        ManagerApproved: null,

        viceManagerApproved: null,

        OfficersAffairsApproved: null,

        branchChiefApproved: true,
      };
    } else if (userType == userTypesEnum.branchChief) {
      findParams = {
        ManagerApproved: null,

        viceManagerApproved: null,

        OfficersAffairsApproved: null,

        branchChiefApproved: null,
      };
    } else if (userType == userTypesEnum.admin) {
      findParams = {};
    }
    console.log({ findParams });
    const myVactions = await Vacation.find(findParams)
      .populate<IOfficerModel>({
        path: "officer",
        populate: {
          path: "rank",
          model: "Rank",
        },
      })
      .populate<IVacationTypeModel>("type")
      .limit(Number(rowsPerPage))
      .skip(Number(pageNumber) * Number(rowsPerPage))
      .sort({
        _id: "asc",
      });
    return myVactions;
  }
}
export default GetPendingVacationsRepo;
